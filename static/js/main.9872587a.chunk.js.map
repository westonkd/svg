{"version":3,"sources":["utils.js","App.js","reportWebVitals.js","index.js"],"names":["svg","rotation","translateX","translateY","scale","transform","fill","width","height","viewBox","xmlns","x","id","y","patternUnits","d","xlinkHref","App","useState","rotationDegrees","setRotationDegrees","setTranslateX","setTranslateY","setScale","className","type","min","max","value","step","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAAO,SAASA,EAAIC,EAAUC,EAAYC,EAAYC,GAClD,IAAMC,EAAS,iBAAaJ,EAAb,uBAAoCC,EAApC,aAAmDC,EAAnD,mBAAwEC,EAAxE,KAEf,OACI,qBAAKE,KAAK,OAAOC,MAAM,QAAQC,OAAO,QAAQC,QAAQ,cAClDC,MAAM,6BADV,SAEI,sBAAKJ,KAAK,OAAOE,OAAO,QAAQC,QAAQ,cAAcF,MAAM,QAAQI,EAAE,IAAtE,UACI,0BAASC,GAAG,eAAeD,EAAE,IAAIE,EAAE,IAAIN,MAAM,KAAKC,OAAO,KAAKM,aAAa,iBAA3E,UACI,sBAAMR,KAAK,UAAUK,EAAE,IAAIJ,MAAM,IAAIC,OAAO,IAAIK,EAAE,MAClD,sBAAMP,KAAK,UAAUK,EAAE,IAAIJ,MAAM,IAAIC,OAAO,IAAIK,EAAE,SAEtD,oBAAGP,KAAK,UAAR,UACI,0BAAUM,GAAG,SAAb,SACI,sBAAMG,EAAE,0DAEZ,mBAAG,YAAU,eAAb,SACI,uBACIC,UAAU,kJACVX,UAAWA,cCyDxBY,MAtEf,WACE,MAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOhB,EAAP,KAAmBmB,EAAnB,KACA,EAAoCH,mBAAS,GAA7C,mBAAOf,EAAP,KAAmBmB,EAAnB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOd,EAAP,KAAcmB,EAAd,KAEA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACGxB,EAAImB,EAAiBjB,EAAYC,EAAYC,GAC9C,gCACE,0CACA,uBACEqB,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,MAAOT,EACPU,KAAK,KACLC,SAAU,SAACC,GACTX,EAAmBW,EAAEC,OAAOJ,aAKlC,gCACE,6CACA,uBACEH,KAAK,QACLC,IAAI,QACJC,IAAI,OACJC,MAAO1B,EACP2B,KAAK,IACLC,SAAU,SAACC,GACTV,EAAcU,EAAEC,OAAOJ,aAK7B,gCACE,6CACA,uBACEH,KAAK,QACLC,IAAI,QACJC,IAAI,OACJC,MAAOzB,EACP0B,KAAK,IACLC,SAAU,SAACC,GACTT,EAAcS,EAAEC,OAAOJ,aAK7B,gCACE,uCACA,uBACEH,KAAK,QACLC,IAAI,IACJC,IAAI,KACJC,MAAOxB,EACPyB,KAAK,KACLC,SAAU,SAACC,GACTR,EAASQ,EAAEC,OAAOJ,mBCtDjBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9872587a.chunk.js","sourcesContent":["export function svg(rotation, translateX, translateY, scale) {\n    const transform = `rotate(${rotation}) translate(${translateX}, ${translateY}) scale(${scale})`\n\n    return (\n        <svg fill=\"none\" width=\"122px\" height=\"122px\" viewBox=\"0 0 122 122\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <svg fill=\"none\" height=\"122px\" viewBox=\"0 0 122 122\" width=\"122px\" x=\"0\">\n                <pattern id=\"checkerboard\" x=\"0\" y=\"0\" width=\"16\" height=\"16\" patternUnits=\"userSpaceOnUse\">\n                    <rect fill=\"#d9d9d9\" x=\"0\" width=\"8\" height=\"8\" y=\"0\"></rect>\n                    <rect fill=\"#d9d9d9\" x=\"8\" width=\"8\" height=\"8\" y=\"8\"></rect>\n                </pattern>\n                <g fill=\"#0B9BE3\">\n                    <clipPath id=\"my-hex\">\n                        <path d=\"M84.75 4L118 61L84.75 118H37.25L4 61L37.25 4H84.75Z\"></path>\n                    </clipPath>\n                    <g clip-path=\"url(#my-hex)\">\n                        <image \n                            xlinkHref=\"https://discovery.sndimg.com/content/dam/images/discovery/fullset/2020/3/16/babypanda2_getty.jpg.rend.hgtvcom.616.411.suffix/1584396557688.jpeg\"\n                            transform={transform}\n                        />\n                    </g>\n                </g>\n            </svg>\n        </svg>\n    )\n}","import \"./App.css\";\nimport { svg } from \"./utils\";\n\nimport { useState } from \"react\";\n\nfunction App() {\n  const [rotationDegrees, setRotationDegrees] = useState(0);\n  const [translateX, setTranslateX] = useState(0)\n  const [translateY, setTranslateY] = useState(0)\n  const [scale, setScale] = useState(1)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {svg(rotationDegrees, translateX, translateY, scale)}\n        <div>\n          <h2>Rotation</h2>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"270\"\n            value={rotationDegrees}\n            step=\"90\"\n            onChange={(e) => {\n              setRotationDegrees(e.target.value)\n            }}\n          ></input>\n        </div>\n\n        <div>\n          <h2>Translate X</h2>\n          <input\n            type=\"range\"\n            min=\"-1000\"\n            max=\"1000\"\n            value={translateX}\n            step=\"1\"\n            onChange={(e) => {\n              setTranslateX(e.target.value)\n            }}\n          ></input>\n        </div>\n\n        <div>\n          <h2>Translate Y</h2>\n          <input\n            type=\"range\"\n            min=\"-1000\"\n            max=\"1000\"\n            value={translateY}\n            step=\"1\"\n            onChange={(e) => {\n              setTranslateY(e.target.value)\n            }}\n          ></input>\n        </div>\n\n        <div>\n          <h2>Scale</h2>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"10\"\n            value={scale}\n            step=\".1\"\n            onChange={(e) => {\n              setScale(e.target.value)\n            }}\n          ></input>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}